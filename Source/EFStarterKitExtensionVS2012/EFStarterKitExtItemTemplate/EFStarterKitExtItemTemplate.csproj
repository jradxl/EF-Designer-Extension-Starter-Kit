<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectTypeGuids>{82b43b9b-a64c-4715-b499-d71e9ca2bd60};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <ProjectGuid>{2B7B6B32-5683-4AC9-9E69-632C07A4CB69}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>EFStarterKitExtItemTemplate</RootNamespace>
    <AssemblyName>EFStarterKitExtItemTemplate</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <GeneratePkgDefFile>false</GeneratePkgDefFile>
    <IncludeAssemblyInVSIXContainer>false</IncludeAssemblyInVSIXContainer>
    <IncludeDebugSymbolsInVSIXContainer>false</IncludeDebugSymbolsInVSIXContainer>
    <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
    <CreateVsixContainer>false</CreateVsixContainer>
    <DeployExtension>false</DeployExtension>
    <DeployVSTemplates>false</DeployVSTemplates>
    <CopyVsixManifestToOutput>false</CopyVsixManifestToOutput>
    <CopyBuildOutputToOutputDirectory>false</CopyBuildOutputToOutputDirectory>
    <CopyOutputSymbolsToOutputDirectory>false</CopyOutputSymbolsToOutputDirectory>
    <SccProjectName>
    </SccProjectName>
    <SccLocalPath>
    </SccLocalPath>
    <SccAuxPath>
    </SccAuxPath>
    <SccProvider>
    </SccProvider>
    <MinimumVisualStudioVersion>11.0</MinimumVisualStudioVersion>
    <FileUpgradeFlags>
    </FileUpgradeFlags>
    <UpgradeBackupLocation>
    </UpgradeBackupLocation>
    <OldToolsVersion>4.0</OldToolsVersion>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="StarterKitExtension.tt">
      <LastGenOutput>StarterKitExtension.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Content Include="TemplateIcon.ico" />
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <ItemGroup>
    <VSTemplate Include="ADONETArtifactGenerator_StarterKitExtension.ItemTemplate.vstemplate" />
  </ItemGroup>
  <PropertyGroup>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
  </PropertyGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="$(VSToolsPath)\VSSDK\Microsoft.VsSDK.targets" Condition="'$(VSToolsPath)' != ''" />
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v10.0\VSSDK\Microsoft.VsSDK.targets" Condition="false" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target> 
  <Target Name="AfterBuild">
  </Target>
  -->
  <!--  Luc Morin: July 22, 2010. From t4csla.codeplex.com, with thanks
		  These Targets redefine the ones in Microsoft.VsSDK.targets.
		  They change the way the Item Template is zipped, and also
		  the way the VSIX file is packed.
		  The trick is done by "emptying" the OutputSubPath, The Culture and the Language (CSharp in our case).
		  This way, the vsix file doesn't include unnecessary "subfolders".
	-->
  <Target Name="ZipItems" DependsOnTargets="$(ZipFilesDependsOn)" Condition="'@(_ZipItem)' != '_'">
    <Message Text="Zipping ItemTemplates" />
    <!--
      There are 2 options for using this task:
        1) specifying a rootpath on each item
        2) using the directory of the item as the rootpath

      Note: the name of the zip file will be based on the rootpath
    -->
    <!--Item using RootPath-->
    <ZipItems Condition="'%(_ZipItem.RootPath)'!='' AND '@(_ZipItem)' != ''" Files="@(_ZipItem)" Action="New" OutputSubPath="" Culture="" ProjectPath="$(MSBuildProjectDirectory)" RootPath="$(MSBuildProjectDirectory)\%(_ZipItem.RootPath)" ZipDefaultLanguage="" ZipLanguage="" ZipFile="%(_ZipItem.ZipFile)">
      <Output TaskParameter="ZipFile" ItemName="IntermediateZipItem" />
      <Output TaskParameter="ZipFile" ItemName="FileWrites" />
    </ZipItems>
    <!--Item using Directory-->
    <ZipItems Condition="'%(_ZipItem.RootPath)'=='' AND '@(_ZipItem)' != ''" Files="@(_ZipItem)" Action="New" OutputSubPath="" Culture="" ProjectPath="$(MSBuildProjectDirectory)" RootPath="%(_ZipItem.RootDir)%(_ZipItem.Directory)" ZipDefaultLanguage="" ZipLanguage="" ZipFile="%(_ZipItem.ZipFile)">
      <Output TaskParameter="ZipFile" ItemName="IntermediateZipItem" />
      <Output TaskParameter="ZipFile" ItemName="FileWrites" />
    </ZipItems>
    <!--
      Copy the generated templates to the deployment folder.
    -->
    <Copy SourceFiles="@(IntermediateZipItem)" DestinationFiles="@(IntermediateZipItem->'$(ZipItemOutput)\%(Language)\%(OutputSubPath)\%(Culture)\%(FileName)%(Extension)')" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)" Retries="$(CopyRetryCount)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Condition="'$(DeployVSTemplates)'=='true'" />
    <!--
      Copy the generated templates to the output folder.
    -->
    <Copy SourceFiles="@(IntermediateZipItem)" DestinationFiles="@(IntermediateZipItem->'$(OutDir)\ItemTemplates\%(Language)\%(OutputSubPath)\%(Culture)\%(FileName)%(Extension)')" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)" Retries="$(CopyRetryCount)" RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)" Condition="'$(CopyZipOutputToOutputDirectory)'=='true'">
      <Output TaskParameter="DestinationFiles" ItemName="_ZipItemOutDir" />
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites" />
    </Copy>
    <Message Importance="High" Text="$(MSBuildProjectName) -&gt; @(_ZipItemOutDir->'%(FullPath)')" />
    <Message Text="Zipping ItemTemplates has completed" />
  </Target>
  <Target Name="TemplateProjectOutputGroup" Outputs="@(TemplateOutputGroupOutput)" DependsOnTargets="$(TemplateProjectOutputGroupDependsOn)">
    <ItemGroup>
      <_TemplateOutputGroupOutput Include="@(_ZipProject->'%(ZipFile)')">
        <TemplateSubPath>
        </TemplateSubPath>
      </_TemplateOutputGroupOutput>
      <_TemplateOutputGroupOutput Include="@(_ZipItem->'%(ZipFile)')">
        <TemplateSubPath>
        </TemplateSubPath>
      </_TemplateOutputGroupOutput>
    </ItemGroup>
    <ItemGroup>
      <TemplateOutputGroupOutput Include="@(_TemplateOutputGroupOutput->'%(FullPath)')" />
    </ItemGroup>
  </Target>
</Project>